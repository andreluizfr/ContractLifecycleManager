version: "3"

services:
  backend:
    container_name: backend-container
    build: ./backend
    ports:
      - 3000:3000
    environment:
      - WEBAPP_URL="http://host.docker.internal:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 1000
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    container_name: frontend-container
    build: ./frontend
    ports:
      - 3000:3000
    environment:
      - API_URL="http://host.docker.internal:5000"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend


  mongo-express:
    image: mongo-express
    container_name: mongo-express-container
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: mongoExpress #usuário pra acessar a página de admin
      ME_CONFIG_BASICAUTH_PASSWORD: passwordExpress #senha pra acessar a página de admin
      ME_CONFIG_MONGODB_URL: mongodb://mongo:password@mongo:27017/?authSource=admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - mongo

  mongo:
    hostname: mongo
    container_name: mongo-container
    image: mongo
    ports:
      - 27017:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - .mongo_volume:/data/db